version: '3.8'

# Docker Compose configuration for local development environment
# This stack provides PostgreSQL, PostgREST, and n8n services

services:
  # PostgreSQL database with pgvector extension for semantic search
  # Runs migrations automatically on first startup
  postgres:
    image: pgvector/pgvector:pg17
    container_name: jobapp-postgres
    restart: unless-stopped
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: localdev123
      POSTGRES_DB: jobapp
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./packages/database/migrations:/docker-entrypoint-initdb.d:ro
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgREST - Auto-generated REST API from PostgreSQL schema
  # Provides RESTful endpoints for all database tables
  postgrest:
    image: postgrest/postgrest:v12.0.2
    container_name: jobapp-postgrest
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      PGRST_DB_URI: postgresql://postgres:localdev123@postgres:5432/jobapp
      PGRST_DB_SCHEMA: public
      PGRST_DB_ANON_ROLE: web_anon
      PGRST_JWT_SECRET: ${POSTGREST_JWT_SECRET:-your-secret-key-min-32-chars-here}
      PGRST_SERVER_PORT: 3000
      PGRST_DB_POOL: 10
      PGRST_OPENAPI_SERVER_PROXY_URI: http://localhost:3001
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  # n8n - Workflow automation platform
  # Handles job search automation and email processing
  n8n:
    image: n8nio/n8n:latest
    container_name: jobapp-n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=localdev123
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=jobapp
      - DB_POSTGRESDB_USER=postgres
      - DB_POSTGRESDB_PASSWORD=localdev123
      - N8N_HOST=localhost
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=http://localhost:5678/
    volumes:
      - n8n-data:/home/node/.n8n
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

# Custom bridge network for service communication
networks:
  app-network:
    driver: bridge

# Persistent volumes for data storage
volumes:
  postgres-data:
  n8n-data:
